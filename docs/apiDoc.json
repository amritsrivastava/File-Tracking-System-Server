{
  "swagger": "2.0",
  "info": {
    "description": "APIs documentation for File Tracking System Server",
    "version": "1.0.0",
    "title": "File Tracking System Server",
    "contact": {
      "email": "amritsrivastava.2cse20@jecrc.ac.in"
    }
  },
  "host": "localhost:3443/",
  "tags": [
    {
      "name": "users",
      "description": "Users basic Authentication routes"
    },
    {
      "name": "employees",
      "description": "Employee specific routes"
    },
    {
      "name": "employee/verify",
      "description": "Routes to verify employee by Admin"
    },
    {
      "name": "processes",
      "description": "Routes to manage Processes"
    },
    {
      "name": "files",
      "description": "Routes to manage Files"
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/users": {
      "get": {
        "tags": ["users"],
        "summary": "List all users by Admin account",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Users not found"
          }
        }
      }
    },
    "/users/signup": {
      "post": {
        "tags": ["users"],
        "summary": "User Sign Up",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "name",
            "in": "body",
            "required": true,
            "type": "string"
          },
          {
            "name": "division",
            "in": "body",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "body",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "body",
            "required": true,
            "type": "string"
          },
          {
            "name": "designation",
            "in": "body",
            "required": false,
            "type": "string"
          },
          {
            "name": "contact",
            "in": "body",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "in": "body",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["users"],
        "summary": "User Login",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "body",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Login success",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "status": {
                  "type": "string"
                },
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Login unsuccessful"
          }
        }
      }
    },
    "/users/checkJWTToken": {
      "post": {
        "tags": ["users"],
        "summary": "To check whether the JWT is valid or not",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "JWT valid",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "status": {
                  "type": "string"
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "401": {
            "description": "JWT invalid",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "status": {
                  "type": "string"
                },
                "err": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/employees": {
      "get": {
        "tags": ["employees"],
        "summary": "List all Employees and QR Generators by Admin account",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Users not found"
          }
        }
      },
      "delete": {
        "tags": ["employees"],
        "summary": "To delete all Employees and QR generators by Admin",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Deletion success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Users not found"
          }
        }
      }
    },
    "/employees/{empId}": {
      "get": {
        "tags": ["employees"],
        "summary": "Find employees by ID",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "empId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Employee not found"
          }
        }
      },
      "put": {
        "tags": ["employees"],
        "summary": "Update an existing employee",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "empId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Employee object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Employee not found"
          }
        }
      },
      "delete": {
        "tags": ["employees"],
        "summary": "To delete Employees and QR generators by ID",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Deletion success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Employee not found"
          }
        }
      }
    },
    "/employee/verify": {
      "get": {
        "tags": ["employee/verify"],
        "summary": "List all unverified Employees and QR Generators by Admin account",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Users not found"
          }
        }
      },
      "post": {
        "tags": ["employee/verify"],
        "summary": "To verify multiple employees and QRG",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "empId",
            "in": "body",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Verified Successfully"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Users not found"
        }
      }
    },
    "/employee/verify/{empId}": {
      "post": {
        "tags": ["employee/verify"],
        "summary": "To verify single employees or QRG",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "empId",
            "in": "path",
            "required": true,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Verified Successfully"
          }
        },
        "401": {
          "description": "Unauthorized"
        },
        "404": {
          "description": "Users not found"
        }
      }
    },
    "/processes": {
      "get": {
        "tags": ["processes"],
        "summary": "List all processes by Admin account",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Process"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Processes not found"
          }
        }
      },
      "post": {
        "tags": ["processes"],
        "summary": "Add process",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "title",
            "in": "body",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "body",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "body",
            "required": true,
            "type": "string"
          },
          {
            "name": "steps",
            "in": "body",
            "required": true,
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "required": "true"
              },
              "duration": {
                "type": "integer",
                "required": "true"
              },
              "division": {
                "type": "string",
                "required": "true"
              },
              "desc": {
                "type": "string"
              },
              "sno": {
                "type": "integer",
                "required": "true"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Process"
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": ["processes"],
        "summary": "To delete all processes by Admin",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Deletion success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Processes not found"
          }
        }
      }
    },
    "/processes/{processId}": {
      "get": {
        "tags": ["processes"],
        "summary": "Find process by ID",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "processId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Process"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Process not found"
          }
        }
      },
      "put": {
        "tags": ["processes"],
        "summary": "Update an existing process",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "processId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Process object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Process"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Process"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Process not found"
          }
        }
      },
      "delete": {
        "tags": ["processes"],
        "summary": "To delete process by ID",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Deletion success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Process not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "designation": {
          "type": "string"
        },
        "division": {
          "type": "string"
        },
        "contact": {
          "type": "integer"
        },
        "isVerified": {
          "type": "boolean"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "Process": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "steps": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "duration": {
              "type": "integer"
            },
            "division": {
              "type": "string"
            },
            "desc": {
              "type": "string"
            },
            "sno": {
              "type": "integer"
            }
          }
        }
      }
    }
  }
}
